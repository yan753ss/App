Инструкция по использованию приложения Log Aggregator

1. Установка и настройка окружения:

   - Установите Python версии 3.x с официального сайта https://www.python.org/.
   - Скачайте и распакуйте проект с GitHub репозитория: [ссылка на ваш репозиторий].

2. Установка зависимостей:

   - Откройте командную строку (терминал) и перейдите в каталог проекта:
     ```
     cd path/to/your/project
     ```

   - Создайте виртуальное окружение (опционально, но рекомендуется):
     ```
     python -m venv venv
     ```

   - Активируйте виртуальное окружение:
     - Для Windows:
       ```
       venv\Scripts\activate
       ```
     - Для macOS/Linux:
       ```
       source venv/bin/activate
       ```

   - Установите необходимые зависимости:
     ```
     pip install -r requirements.txt
     ```

3. Настройка приложения:

   - Откройте файл конфигурации `config.py` и укажите настройки базы данных и другие параметры приложения.

4. Использование функционала приложения:

   - **Парсинг логов:**
     - Запустите парсинг логов командой:
       ```
       python run.py parse_logs
       ```

   - **Просмотр данных:**
     - Для просмотра данных за определенную дату используйте команду:
       ```
       python run.py view_logs 10.06.2004
       ```
     - Для просмотра данных по IP за определенную дату:
       ```
       python run.py view_logs 10.06.2004 --ip
       ```
     - Для просмотра данных по IP и статусу за определенный период дат:
       ```
       python run.py view_logs 10.06.2004 12.06.2004 --ip --status
       ```

   - **API для получения данных в формате JSON:**
     - Запустите сервер Flask для обработки API запросов:
       ```
       python run.py runserver
       ```
     - Для получения данных по временному промежутку и фильтрации по IP:
       Откройте браузер и отправьте GET запрос на URL вида: `http://localhost:5000/api/logs?start_date=10.06.2004&end_date=12.06.2004&ip=true`

5. Остановка приложения:

   - Для выхода из виртуального окружения введите команду:
     ```
     deactivate
     ```

   - Для завершения работы сервера Flask нажмите комбинацию клавиш `Ctrl + C` в консоли, где запущен сервер.

Дополнительная информация:
- Для настройки и изменения параметров приложения обратитесь к файлам `config.py` и `run.py`.
- При возникновении ошибок или вопросов обращайтесь к документации или создателю приложения.

